<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="co.huby.prj.member.mapper.MemberMap">

	
	<select id="SelectAll" resultType="MemberVo">
		SELECT * FROM MEMBER
	</select>
	
	<select id="selectone" resultType="MemberVo" parameterType="MemberVo">
		SELECT * FROM MEMBER WHERE member_id = #{member_id}
	</select>
	
	<insert id="memberInsert" parameterType="MemberVo">
		INSERT INTO MEMBER VALUES(#{member_id}, #{member_pw}, #{member_name},#{member_birth},#{member_addr}
		,#{member_tel},#{member_email},#{member_gender},sysdate,#{member_photo})
	</insert>
	
	<select id="memberIdCheck" resultType="MemberVo" parameterType="MemberVo">
		SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_ID = #{member_id}
	</select>
	
	<update id="memberUpdate" parameterType="MemberVo">
		update member
		<set> 
			<if test="member_photo != null and member_photo != ''"> 
			member_photo = #{member_photo}
			</if>
			<if test="member_pw != null and member_pw != ''">
			,member_pw = #{member_pw}
			</if>
			<if test="member_addr != null and member_addr != ''">
		    ,member_addr = #{member_addr}
		    </if>
			<if test="member_tel != null and member_tel != ''">
		    ,member_tel = #{member_tel}
		    </if>
			<if test="member_email != null and member_email != ''">
		    ,member_email = #{member_email}
		    </if>
		</set>
		where member_id = #{member_id}
	</update>
	
	<insert id="skillInsert" parameterType="SkillsVo">
		insert into skills(
				skill_id, 
				skill_name,
				<if test="skill_level != null and skill_level != ''"> 
				skill_level, 
				</if>
				member_id)
		values(
				skills_seq.nextval,
				#{skill_name},
				<if test="skill_level != null and skill_level != ''">
				#{skill_level},
				</if>
				#{member_id})
	</insert>
	
	<delete id="skillDelete" parameterType="SkillsVo">
		delete from skills
		where skill_id = #{skill_id}
	</delete>
	
	<update id="skillUpdate" parameterType="SkillsVo">
		update skills
		set skill_name = #{skill_name}
		<if test="skill_level != null and skill_level != ''">
		    ,skill_level = #{skill_level}
		</if>
		where skill_id = #{skill_id}
	</update>
	
	<select id="skillSelect" parameterType="SkillsVo" resultType="SkillsVo">
		select skill_id, skill_name, skill_level, member_id
		from skills
		where skill_id = #{skill_id}
	</select>
	
	<select id="careerAll" parameterType="MemberVo" resultType="CareerVo">
		select career_id, start_date, end_date, company_name, career_content, job, (select code_name from code where code_id = job ) as job_name, job_position, member_id
		from career
		where member_id = #{member_id}
	</select>
	
	<insert id="careerinsert" parameterType="CareerVo">
		insert into career
							(
							career_id, 
							start_date, 
							end_date, 
							<if test="company_name != null and company_name != ''">
							company_name, 
							</if>
							<if test="career_content != null and career_content != ''">
							career_content,
							</if>
							<if test="job != null and job != ''"> 
							job, 
							</if>
							<if test="job_position != null and job_position != ''">
							job_position, 
							</if>
							member_id
							)
		values
							(
							career_seq.nextval, 
							#{start_date}, 
							#{end_date}, 
							<if test="company_name != null and company_name != ''">
							#{company_name}, 
							</if>
							<if test="career_content != null and career_content != ''">
							#{career_content},
							</if>
							<if test="job != null and job != ''"> 
							#{job}, 
							</if>
							<if test="job_position != null and job_position != ''">
							#{job_position}, 
							</if>
							#{member_id}
							)
	</insert>
	
	<delete id="careerDelete" parameterType="CareerVo">
		delete from career
		where career_id = #{career_id}
	</delete>
	
	<select id="careerSelect" parameterType="CareerVo" resultType="CareerVo">
		select career_id, start_date, end_date, company_name, career_content, job, (select code_name from code where code_id = job ) as job_name, job_position, member_id
		from career
		where career_id = #{career_id}
	</select>
	
	<update id="careerUpdate" parameterType="CareerVo">
		update career
		set 
			start_date = #{start_date},
		    end_date = #{end_date},
		    company_name = #{company_name},
		    career_content = #{career_content},
		    job = #{job},
		    job_position = #{job_position}
		where career_id = #{career_id}
	</update>
	
	<select id="habitSelectAll" resultType="HabitVo" parameterType="MemberVo">
		select habit_id, habit_name, habit_start_date, habit_log_date, member_id, cnt, case when trunc(habit_log_date) = trunc(sysdate) then 1 else 0 end as checked
		from habit h
		where member_id = #{member_id}
	</select>
	
	<update id="habitUpdate" parameterType="HabitVo">
		update habit
		set habit_log_date = sysdate,
		    cnt = cnt+1
		where habit_id = ${habit_id}
	</update>
	
	<insert id="habitInsert" parameterType="HabitVo">
		insert into habit(
							habit_id,
							habit_name,
							habit_start_date,
							habit_log_date,
							member_id,
							cnt
							)
		values(
							habit_seq.nextval, 
							#{habit_name}, 
							sysdate,
							sysdate-1,
							#{member_id},
							'0'
							)
	</insert>
	
	<delete id="habitDelete" parameterType="HabitVo">
		delete from habit where habit_id = #{habit_id}
	</delete>
	<!-- <select id="getSelect" parameterType="MemberVO" resultType="MemberVO">
		SELECT * FROM MEMBER WHERE ID = #{ID}
	</select>
	
	<select id="memberLoginCheck" parameterType="MemberVO" resultType="MemberVO">
		SELECT * FROM MEMBER WHERE ID = #{ID} AND PW = #{PW}
	</select>
	
	<select id="memberSearch" parameterType="MemberVO" resultType="MemberVO">
		
	</select>
	
	<insert id="memberInsert" parameterType="MemberVO">
		INSERT INTO MEMBER VALUE(#{ID},#{NAME},#{PW},#{ADDR},#{TEL},#{GENDER},#{HOBBY},#{FILENAME},#{AUTH})
	</insert>
	
	<delete id="memberDelete" parameterType="MemberVO">
		DELETE FROM MEMBER WHERE ID = #{ID}
	</delete>
	
	<update id="memberUpdate" parameterType="MemberVO">
		UPDATE MEMBER SET NAME = #{NAME}, PW = #{PW} , ADDR = #{ADDR}, TEL = #{TEL}, GENDER = #{GENDER},
									HOBBY = #{HOBBY}, FILENAME = #{FILENAME}, AUTH = #{AUTH}
	</update> -->
</mapper>

